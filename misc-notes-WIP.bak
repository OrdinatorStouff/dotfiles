#!/usr/bin/env bash
#

# the default umask is set in /etc/profile; 
# for setting the umask for ssh logins, install and configure the libpam-umask package
# umask 022

# https://medium.com/@webprolific/getting-started-with-dotfiles-43c3602fd789
# https://www.thegeekstuff.com/2008/09/bash-shell-ps1-10-examples-to-make-your-linux-prompt-like-angelina-jolie/
# https://github.com/damianb/dotfiles
# https://github.com/webpro/dotfiles
# https://github.com/rootbeersoup/dotfiles




echo "$(tput setaf 1) $(tput dim) 
test text
$(tput sgr 0)"

tput sgr0



# if running bash
if [ -n "$BASH_VERSION" ]; then
    # include .bashrc if it exists
    if [ -f "$HOME/.bashrc" ]; then
        . "$HOME/.bashrc"
    fi
fi

# set PATH so it includes user's private bin if it exists
if [ -d "$HOME/bin" ] ; then
    PATH="$HOME/bin:$PATH"
fi

# Add some more custom software to PATH.
PATH=$PATH:~/usr/bin
export PATH

# Make sure pkg-config can find self-compiled software
# and libraries (installed to ~/usr)
PKG_CONFIG_PATH=$PKG_CONFIG_PATH:~/usr/lib/pkgconfig
export PKG_CONFIG_PATH

# Add custom compiled libraries to library search path.
LD_LIBRARY_PATH=$LD_LIBRARY_PATH:~/usr/lib
export LD_LIBRARY_PATH



# enable bash completion in interactive shells
if [ -f /etc/bash_completion ]; then
	. /etc/bash_completion
fi 
if [ "$PS1" ]; then
    complete -cf sudo
fi



    Black : 0;30
    Blue : 0;34
    Green : 0;32
    Cyan : 0;36
    Red : 0;31
    Purple : 0;35
    Brown : 0;33

\A the current time in 24-hour HH:MM format








.bash_logout
.bash_aliases
.bashrc
.cache/
.config/
.local/
.nano/
.screenrc
.selected_editor
.ssh/
.wget-hsts





source nanorc
https://github.com/scopatz/nanorc

# sudo apt install --reinstall bash-completion 
complete -cf sudo 










PS1="\[\e]0;\u@\h: \w\a\]${debian_chroot:+($debian_chroot)}\[\033[01;31m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ "

PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '





test -n "$SSH_CLIENT" && PS1="$(hostname|cut -b 1-3)" || PS1=
PS1="${PS1}% "



# find /usr/share/nano/ -iname "*.nanorc" -exec echo include {} \; >> ~/.nanorc
/usr/share/nano/*.nanorc





 _____         _ _             _             
|  _  |       | (_)           | |            
| | | |_ __ __| |_ _ __   __ _| |_ ___  _ __ 
| | | | '__/ _` | | '_ \ / _` | __/ _ \| '__|
\ \_/ / | | (_| | | | | | (_| | || (_) | |   
 \___/|_|  \__,_|_|_| |_|\__,_|\__\___/|_|   



    )                                       
 ( /(       (                     )         
 )\()) (    )\ ) (           ) ( /(    (    
((_)\  )(  (()/( )\  (    ( /( )\())(  )(   
  ((_)(()\  ((_)|(_) )\ ) )(_)|_))/ )\(()\  
 / _ \ ((_) _| | (_)_(_/(((_)_| |_ ((_)((_) 
| (_) | '_/ _` | | | ' \)) _` |  _/ _ \ '_| 
 \___/|_| \__,_| |_|_||_|\__,_|\__\___/_|   
                                            


   ___         _ _             _             
  /___\_ __ __| (_)_ __   __ _| |_ ___  _ __ 
 //  // '__/ _` | | '_ \ / _` | __/ _ \| '__|
/ \_//| | | (_| | | | | | (_| | || (_) | |   
\___/ |_|  \__,_|_|_| |_|\__,_|\__\___/|_|   
                                             




 _____            __                        __                   
/\  __`\         /\ \  __                  /\ \__                
\ \ \/\ \  _ __  \_\ \/\_\    ___      __  \ \ ,_\   ___   _ __  
 \ \ \ \ \/\`'__\/'_` \/\ \ /' _ `\  /'__`\ \ \ \/  / __`\/\`'__\
  \ \ \_\ \ \ \//\ \L\ \ \ \/\ \/\ \/\ \L\.\_\ \ \_/\ \L\ \ \ \/ 
   \ \_____\ \_\\ \___,_\ \_\ \_\ \_\ \__/.\_\\ \__\ \____/\ \_\ 
    \/_____/\/_/ \/__,_ /\/_/\/_/\/_/\/__/\/_/ \/__/\/___/  \/_/  
                                                                 
                                                                 









aliases


alias cd..="cd .." 
alias du="du -h"
alias df="df -h"

alias ipconfig="ip address show"



[ -x /usr/bin/systemctl ] && sys="systemctl" # a symlink in /usr/bin works better to be honest
[ -x /usr/bin/htop ] && alias top=htop


# easy extract, nabbed from somewhere online and cobbled more into it.
# TODO: check if packages are installed and prompt accordingly
# sudo apt install -y tar bzip2 unrar-free gzip unzip zip ncompress p7zip-full rzip cabextract arj lhasa xz-utils zoo lzop
extract () {
  if [ -f "$1" ] ; then
    case "$1" in                          # packages needed (debian package name): 
        *.tar.bz2)  tar xvjf "$1"      ;; # bzip2 tar
        *.tar.gz)   tar xvzf "$1"      ;; # gzip tar
        *.bz2)      bunzip2 "$1"       ;; # bzip2
        *.rar)      unrar x "$1"       ;; # unrar-free
		*.arc)      unrar x "$1"       ;; # unrar-free
	    *.arc)      arj x "$1"         ;; # arj
	    *.cab)      cabextract -f "$1" ;; #	cabextract
        *.gz)       gunzip "$1"        ;; # gzip
        *.lha)      lha x "$1"         ;; # lhasa
        *.lzh)      lha x "$1"         ;; # lhasa
        *.lzs)      lha x "$1"         ;; # lhasa
		*.lzo       lzop -ev "$1"      ;; # lzop
        *.pma)      lha x "$1"         ;; # lhasa
        *.tar)      tar xvf "$1"       ;; # tar
		*.xz)       unxz "$1"          ;; # xz-utils
		*.tar.xz)   tar xJf "$1"       ;; # xz-utils tar	
        *.tbz2)     tar xvjf "$1"      ;; # bzip2 tar
		*.tbz)      tar xvjf "$1"      ;; # bzip2 tar
        *.tgz)      tar xvzf "$1"      ;; # gzip tar
        *.zip)      unzip "$1"         ;; # unzip
        *.Z)        uncompress "$1"    ;; # ncompress
        *.7z)       7z x "$1"          ;; # p7zip-full
		*.zoo       zoo x/,// "$1"     ;; # zoo 
		*.rz)       rzip -dv  "$1"     ;; # rzip 
		*.rzip)     rzip -dv  "$1"     ;; # rzip 
        *)          echo "don't know how to extract '$1'..." ;;
    esac
else
    echo "'$1' is not a valid file!"
fi
}
alias ex=extract

















## Colors?  Used for the prompt.
# Regular text color
	
# darker colors
	BBLACK='\[\e[1;30m\]'
	DBLUE='\[\e[1;34m\]'
	DCYAN='\[\e[1;36m\]'
	DMAGENTA='\[\e[1;35m\]'
	DRED='\[\e[1;31m\]'
	DWHITE='\[\e[1;37m\]'
	DYELLOW='\[\e[1;33m\]'
# normal colors
	BLACK='\[\e[0;30m\]'
	BLUE='\[\e[0;34m\]'
	CYAN='\[\e[0;36m\]'
	GREEN='\[\e[0;32m\]'
	MAGENTA='\[\e[0;35m\]'
	RED='\[\e[0;31m\]'
	WHITE='\[\e[0;37m\]'
	YELLOW='\[\e[0;33m\]'
# background color
	BGBLACK='\[\e[40m\]'
	BGBLUE='\[\e[1;34m\]'
	BGCYAN='\[\e[1;36m\]'
	BGGREEN='\[\e[1;32m\]'
	BGMAGENTA='\[\e[1;35m\]'
	BGRED='\[\e[41m\]'
	BGREEN='\[\e[1;32m\]'
	BGWHITE='\[\e[1;37m\]'
	BGYELLOW='\[\e[1;33m\]'

PROMPT_COMMAND=smile_prompt

function smile_prompt {
	if [ "$?" -eq "0" ] 
		then
			#smiley 
			SC="${GREEN}:)"
		else
			#frowney
			SC="${RED}:("
	fi
	if [ $UID -eq 0 ] 
		then
			#root user color
			UC="${RED}"
		else
			#normal user color
			UC="${BWHITE}"
		fi
	#hostname color
	HC="${BYELLOW}"
	#regular color
	RC="${BWHITE}"
	#default color
	DF='\[\e[0m\]'
	PS1="[${UC}\u${RC}@${HC}\h ${RC}\W${DF}] ${SC}${DF} "
}






# Get the host name (first 4 chars)
HOST_PROMPT_="%{$fg_bold[red]%}@$HOST ➜ %{$fg_bold[cyan]%}%c "
GIT_PROMPT="%{$fg_bold[blue]%}\$(git_prompt_info)%{$fg_bold[blue]%} % %{$reset_color%}"
PROMPT="$HOST_PROMPT_$RUBY_PROMPT_$GIT_PROMPT"

ZSH_THEME_GIT_PROMPT_PREFIX="git:(%{$fg[red]%}"
ZSH_THEME_GIT_PROMPT_SUFFIX="%{$reset_color%}"
ZSH_THEME_GIT_PROMPT_DIRTY="%{$fg[blue]%}) %{$fg[yellow]%}✗%{$reset_color%}"
ZSH_THEME_GIT_PROMPT_CLEAN="%{$fg[blue]%})"



